openapi: 3.0.3
info:
  title: DRF todo-list API
  version: 1.0.0
  description: A simple ToDo list pet project
paths:
  /api-token-auth/:
    post:
      operationId: api_token_auth_create
      tags:
      - api-token-auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/tasklists/:
    get:
      operationId: tasklists_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - tasklists
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
    post:
      operationId: tasklists_create
      tags:
      - tasklists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskList'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
          description: ''
  /api/tasklists/{id}/:
    get:
      operationId: tasklists_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - tasklists
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
          description: ''
    put:
      operationId: tasklists_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - tasklists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskList'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
          description: ''
    patch:
      operationId: tasklists_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - tasklists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskList'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
          description: ''
    delete:
      operationId: tasklists_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - tasklists
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/tasklists/{id}/tasks/:
    get:
      operationId: tasklists_tasks_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - tasklists
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskList'
          description: ''
  /api/tasks/:
    get:
      operationId: tasks_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - tasks
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskList'
          description: ''
    post:
      operationId: tasks_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks/{id}/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - tasks
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - tasks
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    PaginatedTaskList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    PaginatedTaskListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskList'
    PatchedTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        is_completed:
          type: boolean
        user:
          type: integer
        todo_list:
          type: integer
          nullable: true
    PatchedTaskList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        user:
          type: integer
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        is_completed:
          type: boolean
        user:
          type: integer
        todo_list:
          type: integer
          nullable: true
      required:
      - id
      - title
      - user
    TaskList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        user:
          type: integer
      required:
      - id
      - title
      - user
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
